var search_data = {"index":{"searchIndex":["account","accountoperation","accountscontroller","accountshelper","admin","accountoperationscontroller","accountoperationshelper","admincontroller","announcementscontroller","announcementshelper","currenciescontroller","currencieshelper","informationscontroller","informationshelper","pendingtransferscontroller","pendingtransfershelper","staticpagescontroller","staticpageshelper","ticketscontroller","ticketshelper","userscontroller","usershelper","yubikeyscontroller","yubikeyshelper","announcement","applicationcontroller","applicationhelper","backupmailer","bankaccount","bankaccountscontroller","bankaccountshelper","bitcoin","client","jsonwrapper","util","bitcoinaddressvalidator","bitcointransfer","blankvalidator","comment","commentscontroller","commentshelper","currency","devise","models","gaotpauthenticatable","ykotpauthenticatable","strategies","gaotpauthenticatable","ykotpauthenticatable","ibanvalidator","informationscontroller","informationshelper","invoice","invoicescontroller","invoiceshelper","libertyreserve","client","libertyreservetransfer","limitorder","lockfile","manager","marketorder","maximalamountvalidator","minimalamountvalidator","minimalorderamountvalidator","minimalorderppcvalidator","negativevalidator","notminevalidator","operation","qrcodescontroller","qrcodeshelper","registrationscontroller","registrationshelper","staticpage","staticpagescontroller","staticpageshelper","thirdpartycallbackscontroller","ticket","ticketmailer","ticketscontroller","ticketshelper","trade","tradeorder","tradeorderscontroller","tradeordershelper","tradescontroller","tradeshelper","transfer","transferscontroller","transfershelper","urlvalidator","usedcurrency","user","userbalancevalidator","usermailer","userscontroller","usershelper","wiretransfer","yubico","client","replayedotperror","yubikey","yubikeyscontroller","yubikeyshelper","activable?()","activate()","activate!()","activate_link_for()","active()","active()","active_with_category()","address=()","after_sign_in_path_for()","all_trades()","allowed_currencies()","allowed_currencies()","amount_field_value()","as_json()","as_json()","authenticate!()","authenticate!()","authentication_block()","auto_refresh_if_necessary()","balance()","balance()","balances()","balances()","bank_account_delete()","base_matching_order()","bbe_link()","bitcoin_address()","book()","build_with_params()","buying?()","captcha_checked!()","check_bank_account_id()","check_debit_credit_equality()","check_payment()","check_permissions()","class_for_transfer()","close()","close_notification()","color_for()","color_for_balance()","color_for_currency()","color_for_state()","color_for_transfer_state()","comment_notification()","conditions_for_collection()","conditions_for_collection()","conditions_for_collection()","confirm!()","confirmation_tooltip_for()","confirmed?()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_from_lr_post!()","create_from_lr_transaction_id()","create_notification()","creation_link()","credit_funds()","currency_as_options()","currency_icon_for()","dark_pool_icon_for()","dark_pool_message()","delete_link_for()","deposit()","destroy()","destroy()","destroy()","destroy()","display_menu?()","do_notify()","edit()","email_confirmation()","enforce_admin_rights()","enforce_management_rights()","enforce_user_type()","errors_for()","exact_balance()","execute()","execute()","execute()","execute()","execute!()","fee_for()","fetch_bank_accounts()","find_for_database_authentication()","format_amount()","from_params()","ga_provisioning_uri()","generate_authentication_token()","generate_ga_otp_secret()","generate_name()","generate_new_address()","generate_payment_address()","generate_reference()","get_account()","get_announcements()","get_balance()","get_orders()","get_page()","get_transaction()","history()","iban()","id_column()","inactivate_if_needed!()","inactive()","index()","index()","index()","index()","index()","index()","index()","invoice_delete()","invoice_details()","invoice_payment_notification()","invoice_state()","jqchart_defaults()","locale_switch_link()","lock()","lr_create_from_sci()","lr_transfer_fail()","lr_transfer_success()","matching_orders()","matching_orders()","max_withdraw_for()","menu_item()","method_missing()","minimal_amount_for()","move_xml_params()","my_bitcoin_address?()","name_column()","new()","new()","new()","new()","new()","new()","new()","notify_close!()","notify_comment!()","notify_create!()","notify_reopen!()","number_to_bitcoins()","number_to_lreur()","number_to_lrusd()","payments_received()","pecunix_deposit_form()","pending()","plottable()","post_to_callback()","process_pending()","process_tx()","public_url()","px_cancel()","px_payment()","px_status()","qr_code()","qrcode_image_path()","qrcode_image_tag()","random_id()","refresh_account_address()","refresh_orders()","registration_confirmation()","reopen()","reopen_notification()","reported_balance()","request()","required_confirmations()","reset_ga_otp_secret()","round_amount()","round_amount()","selling?()","set_key_id()","set_label()","set_locale()","set_time_zone()","show()","show()","show()","show()","show()","show()","sign_for_balance()","storage_account_for()","sub_matching_orders()","sub_matching_orders()","support()","synchronize_transactions!()","ticker()","title_column()","to_label()","to_label()","to_label()","tooltip_for_state()","trade_notification()","transfer()","transfer_details()","transfer_state()","type_column()","type_for_trade()","type_name()","unread()","update()","update_password()","user_column()","user_has_balance?()","valid_bitcoin_address?()","valid_confirmation?()","valid_ga_otp?()","valid_otp?()","valid_yk_otp?()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","verification_hash()","verify_otp()","visible()","wallet_backup()","welcome()","with_category()","with_currency()","with_currency()","with_locale()","with_name()","withdrawal_processed_notification()","yubikey_delete()","yubikey_details()","readme_for_app"],"longSearchIndex":["account","accountoperation","accountscontroller","accountshelper","admin","admin::accountoperationscontroller","admin::accountoperationshelper","admin::admincontroller","admin::announcementscontroller","admin::announcementshelper","admin::currenciescontroller","admin::currencieshelper","admin::informationscontroller","admin::informationshelper","admin::pendingtransferscontroller","admin::pendingtransfershelper","admin::staticpagescontroller","admin::staticpageshelper","admin::ticketscontroller","admin::ticketshelper","admin::userscontroller","admin::usershelper","admin::yubikeyscontroller","admin::yubikeyshelper","announcement","applicationcontroller","applicationhelper","backupmailer","bankaccount","bankaccountscontroller","bankaccountshelper","bitcoin","bitcoin::client","bitcoin::jsonwrapper","bitcoin::util","bitcoinaddressvalidator","bitcointransfer","blankvalidator","comment","commentscontroller","commentshelper","currency","devise","devise::models","devise::models::gaotpauthenticatable","devise::models::ykotpauthenticatable","devise::strategies","devise::strategies::gaotpauthenticatable","devise::strategies::ykotpauthenticatable","ibanvalidator","informationscontroller","informationshelper","invoice","invoicescontroller","invoiceshelper","libertyreserve","libertyreserve::client","libertyreservetransfer","limitorder","lockfile","manager","marketorder","maximalamountvalidator","minimalamountvalidator","minimalorderamountvalidator","minimalorderppcvalidator","negativevalidator","notminevalidator","operation","qrcodescontroller","qrcodeshelper","registrationscontroller","registrationshelper","staticpage","staticpagescontroller","staticpageshelper","thirdpartycallbackscontroller","ticket","ticketmailer","ticketscontroller","ticketshelper","trade","tradeorder","tradeorderscontroller","tradeordershelper","tradescontroller","tradeshelper","transfer","transferscontroller","transfershelper","urlvalidator","usedcurrency","user","userbalancevalidator","usermailer","userscontroller","usershelper","wiretransfer","yubico","yubico::client","yubico::replayedotperror","yubikey","yubikeyscontroller","yubikeyshelper","tradeorder#activable?()","tradeorderscontroller#activate()","tradeorder#activate!()","tradeordershelper#activate_link_for()","announcement::active()","tradeorder::active()","tradeorder::active_with_category()","bitcointransfer#address=()","applicationcontroller#after_sign_in_path_for()","tradescontroller#all_trades()","admin#allowed_currencies()","manager#allowed_currencies()","applicationhelper#amount_field_value()","accountoperation#as_json()","invoice#as_json()","devise::strategies::gaotpauthenticatable#authenticate!()","devise::strategies::ykotpauthenticatable#authenticate!()","libertyreserve::client#authentication_block()","invoiceshelper#auto_refresh_if_necessary()","account#balance()","accountscontroller#balance()","admin::informationscontroller#balances()","admin::userscontroller#balances()","bankaccountshelper#bank_account_delete()","tradeorder::base_matching_order()","applicationhelper#bbe_link()","user#bitcoin_address()","tradeorderscontroller#book()","tradeorder::build_with_params()","tradeorder#buying?()","user#captcha_checked!()","wiretransfer#check_bank_account_id()","operation#check_debit_credit_equality()","invoice#check_payment()","ticketscontroller#check_permissions()","transfer::class_for_transfer()","ticketscontroller#close()","ticketmailer#close_notification()","transfershelper#color_for()","accountshelper#color_for_balance()","informationscontroller#color_for_currency()","invoiceshelper#color_for_state()","transfershelper#color_for_transfer_state()","ticketmailer#comment_notification()","admin::accountoperationscontroller#conditions_for_collection()","admin::pendingtransferscontroller#conditions_for_collection()","admin::userscontroller#conditions_for_collection()","user#confirm!()","transfershelper#confirmation_tooltip_for()","accountoperation#confirmed?()","admin::accountoperationscontroller#create()","bankaccountscontroller#create()","commentscontroller#create()","invoicescontroller#create()","registrationscontroller#create()","ticketscontroller#create()","tradeorderscontroller#create()","transferscontroller#create()","userscontroller#create()","yubikeyscontroller#create()","accountoperation::create_from_lr_post!()","accountoperation::create_from_lr_transaction_id()","ticketmailer#create_notification()","applicationhelper#creation_link()","invoice#credit_funds()","tradeordershelper#currency_as_options()","applicationhelper#currency_icon_for()","tradeordershelper#dark_pool_icon_for()","tradeordershelper#dark_pool_message()","tradeordershelper#delete_link_for()","accountscontroller#deposit()","bankaccountscontroller#destroy()","invoicescontroller#destroy()","tradeorderscontroller#destroy()","yubikeyscontroller#destroy()","applicationhelper#display_menu?()","ticketmailer#do_notify()","userscontroller#edit()","invoice#email_confirmation()","admin::admincontroller#enforce_admin_rights()","admin::admincontroller#enforce_management_rights()","admin::admincontroller#enforce_user_type()","applicationhelper#errors_for()","accountshelper#exact_balance()","bitcointransfer#execute()","libertyreservetransfer#execute()","trade#execute()","wiretransfer#execute()","tradeorder#execute!()","accountoperation::fee_for()","transferscontroller#fetch_bank_accounts()","user::find_for_database_authentication()","tradeordershelper#format_amount()","transfer::from_params()","devise::models::gaotpauthenticatable#ga_provisioning_uri()","invoice#generate_authentication_token()","devise::models::gaotpauthenticatable#generate_ga_otp_secret()","user#generate_name()","account#generate_new_address()","invoice#generate_payment_address()","invoice#generate_reference()","bitcoin::util::get_account()","applicationcontroller#get_announcements()","libertyreserve::client#get_balance()","tradeorder::get_orders()","staticpage::get_page()","libertyreserve::client#get_transaction()","libertyreserve::client#history()","bankaccount#iban()","admin::usershelper#id_column()","tradeorder#inactivate_if_needed!()","tradeorder::inactive()","bankaccountscontroller#index()","invoicescontroller#index()","ticketscontroller#index()","tradeorderscontroller#index()","tradescontroller#index()","transferscontroller#index()","yubikeyscontroller#index()","invoiceshelper#invoice_delete()","invoiceshelper#invoice_details()","usermailer#invoice_payment_notification()","invoiceshelper#invoice_state()","informationscontroller#jqchart_defaults()","applicationhelper#locale_switch_link()","lockfile::lock()","thirdpartycallbackscontroller#lr_create_from_sci()","thirdpartycallbackscontroller#lr_transfer_fail()","thirdpartycallbackscontroller#lr_transfer_success()","tradeorder#matching_orders()","tradeorder::matching_orders()","account#max_withdraw_for()","applicationhelper#menu_item()","bitcoin::client#method_missing()","transfer::minimal_amount_for()","applicationcontroller#move_xml_params()","bitcoin::util::my_bitcoin_address?()","admin::usershelper#name_column()","bitcoin::client::new()","bitcoin::jsonwrapper::new()","invoicescontroller#new()","ticketscontroller#new()","tradeorderscontroller#new()","transferscontroller#new()","userscontroller#new()","ticket#notify_close!()","comment#notify_comment!()","ticket#notify_create!()","ticket#notify_reopen!()","applicationhelper#number_to_bitcoins()","applicationhelper#number_to_lreur()","applicationhelper#number_to_lrusd()","invoice#payments_received()","accountscontroller#pecunix_deposit_form()","ticket::pending()","trade::plottable()","invoice#post_to_callback()","invoice::process_pending()","admin::pendingtransferscontroller#process_tx()","invoice#public_url()","thirdpartycallbackscontroller#px_cancel()","thirdpartycallbackscontroller#px_payment()","thirdpartycallbackscontroller#px_status()","user#qr_code()","applicationhelper#qrcode_image_path()","applicationhelper#qrcode_image_tag()","libertyreserve::client#random_id()","accountoperation#refresh_account_address()","accountoperation#refresh_orders()","usermailer#registration_confirmation()","ticketscontroller#reopen()","ticketmailer#reopen_notification()","admin::informationscontroller#reported_balance()","bitcoin::jsonwrapper#request()","accountoperation#required_confirmations()","userscontroller#reset_ga_otp_secret()","transfer::round_amount()","transfer#round_amount()","tradeorder#selling?()","yubikey#set_key_id()","admin::accountoperationscontroller#set_label()","applicationcontroller#set_locale()","applicationcontroller#set_time_zone()","accountscontroller#show()","invoicescontroller#show()","qrcodescontroller#show()","staticpagescontroller#show()","ticketscontroller#show()","transferscontroller#show()","accountshelper#sign_for_balance()","account::storage_account_for()","limitorder#sub_matching_orders()","marketorder#sub_matching_orders()","informationscontroller#support()","accountoperation::synchronize_transactions!()","tradescontroller#ticker()","admin::ticketshelper#title_column()","accountoperation#to_label()","bankaccount#to_label()","yubikey#to_label()","invoiceshelper#tooltip_for_state()","usermailer#trade_notification()","libertyreserve::client#transfer()","transfershelper#transfer_details()","transfershelper#transfer_state()","admin::pendingtransfershelper#type_column()","tradeshelper#type_for_trade()","transfer#type_name()","accountoperation#unread()","userscontroller#update()","userscontroller#update_password()","admin::accountoperationshelper#user_column()","tradeorder#user_has_balance?()","bitcoin::util::valid_bitcoin_address?()","accountoperation::valid_confirmation?()","devise::models::gaotpauthenticatable#valid_ga_otp?()","yubikey#valid_otp?()","devise::models::ykotpauthenticatable#valid_yk_otp?()","bitcoinaddressvalidator#validate_each()","blankvalidator#validate_each()","ibanvalidator#validate_each()","maximalamountvalidator#validate_each()","minimalamountvalidator#validate_each()","minimalorderamountvalidator#validate_each()","minimalorderppcvalidator#validate_each()","negativevalidator#validate_each()","notminevalidator#validate_each()","urlvalidator#validate_each()","userbalancevalidator#validate_each()","invoice#verification_hash()","yubico::client#verify_otp()","tradeorder::visible()","backupmailer#wallet_backup()","informationscontroller#welcome()","tradeorder::with_category()","trade::with_currency()","tradeorder::with_currency()","staticpage::with_locale()","staticpage::with_name()","usermailer#withdrawal_processed_notification()","yubikeyshelper#yubikey_delete()","yubikeyshelper#yubikey_details()",""],"info":[["Account","","Account.html","",""],["AccountOperation","","AccountOperation.html","",""],["AccountsController","","AccountsController.html","",""],["AccountsHelper","","AccountsHelper.html","",""],["Admin","","Admin.html","",""],["Admin::AccountOperationsController","","Admin/AccountOperationsController.html","",""],["Admin::AccountOperationsHelper","","Admin/AccountOperationsHelper.html","",""],["Admin::AdminController","","Admin/AdminController.html","",""],["Admin::AnnouncementsController","","Admin/AnnouncementsController.html","",""],["Admin::AnnouncementsHelper","","Admin/AnnouncementsHelper.html","",""],["Admin::CurrenciesController","","Admin/CurrenciesController.html","",""],["Admin::CurrenciesHelper","","Admin/CurrenciesHelper.html","",""],["Admin::InformationsController","","Admin/InformationsController.html","",""],["Admin::InformationsHelper","","Admin/InformationsHelper.html","",""],["Admin::PendingTransfersController","","Admin/PendingTransfersController.html","",""],["Admin::PendingTransfersHelper","","Admin/PendingTransfersHelper.html","",""],["Admin::StaticPagesController","","Admin/StaticPagesController.html","",""],["Admin::StaticPagesHelper","","Admin/StaticPagesHelper.html","",""],["Admin::TicketsController","","Admin/TicketsController.html","",""],["Admin::TicketsHelper","","Admin/TicketsHelper.html","",""],["Admin::UsersController","","Admin/UsersController.html","",""],["Admin::UsersHelper","","Admin/UsersHelper.html","",""],["Admin::YubikeysController","","Admin/YubikeysController.html","",""],["Admin::YubikeysHelper","","Admin/YubikeysHelper.html","",""],["Announcement","","Announcement.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BackupMailer","","BackupMailer.html","",""],["BankAccount","","BankAccount.html","",""],["BankAccountsController","","BankAccountsController.html","",""],["BankAccountsHelper","","BankAccountsHelper.html","",""],["Bitcoin","","Bitcoin.html","",""],["Bitcoin::Client","","Bitcoin/Client.html","",""],["Bitcoin::JsonWrapper","","Bitcoin/JsonWrapper.html","",""],["Bitcoin::Util","","Bitcoin/Util.html","",""],["BitcoinAddressValidator","","BitcoinAddressValidator.html","",""],["BitcoinTransfer","","BitcoinTransfer.html","",""],["BlankValidator","","BlankValidator.html","",""],["Comment","","Comment.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["Currency","","Currency.html","",""],["Devise","","Devise.html","",""],["Devise::Models","","Devise/Models.html","",""],["Devise::Models::GaOtpAuthenticatable","","Devise/Models/GaOtpAuthenticatable.html","",""],["Devise::Models::YkOtpAuthenticatable","","Devise/Models/YkOtpAuthenticatable.html","",""],["Devise::Strategies","","Devise/Strategies.html","",""],["Devise::Strategies::GaOtpAuthenticatable","","Devise/Strategies/GaOtpAuthenticatable.html","",""],["Devise::Strategies::YkOtpAuthenticatable","","Devise/Strategies/YkOtpAuthenticatable.html","",""],["IbanValidator","","IbanValidator.html","",""],["InformationsController","","InformationsController.html","",""],["InformationsHelper","","InformationsHelper.html","",""],["Invoice","","Invoice.html","","<p>Represents an invoice for which a payment is expected, upon payment a\ncallback is POSTed to and the merchant …\n"],["InvoicesController","","InvoicesController.html","",""],["InvoicesHelper","","InvoicesHelper.html","",""],["LibertyReserve","","LibertyReserve.html","",""],["LibertyReserve::Client","","LibertyReserve/Client.html","",""],["LibertyReserveTransfer","","LibertyReserveTransfer.html","",""],["LimitOrder","","LimitOrder.html","",""],["Lockfile","","Lockfile.html","","<p>Naive implementation of a lock file mechanism should be sufficient for long\nrunning rake tasks\n"],["Manager","","Manager.html","",""],["MarketOrder","","MarketOrder.html","",""],["MaximalAmountValidator","","MaximalAmountValidator.html","",""],["MinimalAmountValidator","","MinimalAmountValidator.html","",""],["MinimalOrderAmountValidator","","MinimalOrderAmountValidator.html","",""],["MinimalOrderPpcValidator","","MinimalOrderPpcValidator.html","",""],["NegativeValidator","","NegativeValidator.html","",""],["NotMineValidator","","NotMineValidator.html","",""],["Operation","","Operation.html","",""],["QrcodesController","","QrcodesController.html","",""],["QrcodesHelper","","QrcodesHelper.html","",""],["RegistrationsController","","RegistrationsController.html","",""],["RegistrationsHelper","","RegistrationsHelper.html","",""],["StaticPage","","StaticPage.html","",""],["StaticPagesController","","StaticPagesController.html","",""],["StaticPagesHelper","","StaticPagesHelper.html","",""],["ThirdPartyCallbacksController","","ThirdPartyCallbacksController.html","",""],["Ticket","","Ticket.html","",""],["TicketMailer","","TicketMailer.html","",""],["TicketsController","","TicketsController.html","",""],["TicketsHelper","","TicketsHelper.html","",""],["Trade","","Trade.html","",""],["TradeOrder","","TradeOrder.html","",""],["TradeOrdersController","","TradeOrdersController.html","",""],["TradeOrdersHelper","","TradeOrdersHelper.html","",""],["TradesController","","TradesController.html","",""],["TradesHelper","","TradesHelper.html","",""],["Transfer","","Transfer.html","",""],["TransfersController","","TransfersController.html","",""],["TransfersHelper","","TransfersHelper.html","",""],["UrlValidator","","UrlValidator.html","",""],["UsedCurrency","","UsedCurrency.html","",""],["User","","User.html","",""],["UserBalanceValidator","","UserBalanceValidator.html","",""],["UserMailer","","UserMailer.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["WireTransfer","","WireTransfer.html","",""],["Yubico","","Yubico.html","",""],["Yubico::Client","","Yubico/Client.html","",""],["Yubico::ReplayedOTPError","","Yubico/ReplayedOTPError.html","",""],["Yubikey","","Yubikey.html","",""],["YubikeysController","","YubikeysController.html","",""],["YubikeysHelper","","YubikeysHelper.html","",""],["activable?","TradeOrder","TradeOrder.html#method-i-activable-3F","()","<p>TODO : DRY up\n"],["activate","TradeOrdersController","TradeOrdersController.html#method-i-activate","()",""],["activate!","TradeOrder","TradeOrder.html#method-i-activate-21","()","<p>TODO : DRY up, doublon avec les validations ?\n"],["activate_link_for","TradeOrdersHelper","TradeOrdersHelper.html#method-i-activate_link_for","(trade_order)",""],["active","Announcement","Announcement.html#method-c-active","()",""],["active","TradeOrder","TradeOrder.html#method-c-active","()",""],["active_with_category","TradeOrder","TradeOrder.html#method-c-active_with_category","(category)",""],["address=","BitcoinTransfer","BitcoinTransfer.html#method-i-address-3D","(a)",""],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource)","<p>Redirects users to their account page after sign-in\n"],["all_trades","TradesController","TradesController.html#method-i-all_trades","()",""],["allowed_currencies","Admin","Admin.html#method-i-allowed_currencies","()",""],["allowed_currencies","Manager","Manager.html#method-i-allowed_currencies","()",""],["amount_field_value","ApplicationHelper","ApplicationHelper.html#method-i-amount_field_value","(amount)",""],["as_json","AccountOperation","AccountOperation.html#method-i-as_json","(options={})",""],["as_json","Invoice","Invoice.html#method-i-as_json","(options = {})","<p>Add public URL in auto-generated JSON representation\n"],["authenticate!","Devise::Strategies::GaOtpAuthenticatable","Devise/Strategies/GaOtpAuthenticatable.html#method-i-authenticate-21","()",""],["authenticate!","Devise::Strategies::YkOtpAuthenticatable","Devise/Strategies/YkOtpAuthenticatable.html#method-i-authenticate-21","()",""],["authentication_block","LibertyReserve::Client","LibertyReserve/Client.html#method-i-authentication_block","(xml)",""],["auto_refresh_if_necessary","InvoicesHelper","InvoicesHelper.html#method-i-auto_refresh_if_necessary","(invoice)",""],["balance","Account","Account.html#method-i-balance","(currency, options = {} )","<p>BigDecimal returned here\n"],["balance","AccountsController","AccountsController.html#method-i-balance","()",""],["balances","Admin::InformationsController","Admin/InformationsController.html#method-i-balances","()",""],["balances","Admin::UsersController","Admin/UsersController.html#method-i-balances","()",""],["bank_account_delete","BankAccountsHelper","BankAccountsHelper.html#method-i-bank_account_delete","(bank_account)",""],["base_matching_order","TradeOrder","TradeOrder.html#method-c-base_matching_order","(order)",""],["bbe_link","ApplicationHelper","ApplicationHelper.html#method-i-bbe_link","(type, id)",""],["bitcoin_address","User","User.html#method-i-bitcoin_address","()",""],["book","TradeOrdersController","TradeOrdersController.html#method-i-book","()",""],["build_with_params","TradeOrder","TradeOrder.html#method-c-build_with_params","(params)",""],["buying?","TradeOrder","TradeOrder.html#method-i-buying-3F","()",""],["captcha_checked!","User","User.html#method-i-captcha_checked-21","()",""],["check_bank_account_id","WireTransfer","WireTransfer.html#method-i-check_bank_account_id","()",""],["check_debit_credit_equality","Operation","Operation.html#method-i-check_debit_credit_equality","()",""],["check_payment","Invoice","Invoice.html#method-i-check_payment","()","<p>Updates the invoice state after polling the bitcoin client\n"],["check_permissions","TicketsController","TicketsController.html#method-i-check_permissions","()",""],["class_for_transfer","Transfer","Transfer.html#method-c-class_for_transfer","(currency)",""],["close","TicketsController","TicketsController.html#method-i-close","()",""],["close_notification","TicketMailer","TicketMailer.html#method-i-close_notification","(ticket)",""],["color_for","TransfersHelper","TransfersHelper.html#method-i-color_for","(transfer)",""],["color_for_balance","AccountsHelper","AccountsHelper.html#method-i-color_for_balance","(balance)",""],["color_for_currency","InformationsController","InformationsController.html#method-i-color_for_currency","(currency)",""],["color_for_state","InvoicesHelper","InvoicesHelper.html#method-i-color_for_state","(state)",""],["color_for_transfer_state","TransfersHelper","TransfersHelper.html#method-i-color_for_transfer_state","(state)",""],["comment_notification","TicketMailer","TicketMailer.html#method-i-comment_notification","(ticket)",""],["conditions_for_collection","Admin::AccountOperationsController","Admin/AccountOperationsController.html#method-i-conditions_for_collection","()",""],["conditions_for_collection","Admin::PendingTransfersController","Admin/PendingTransfersController.html#method-i-conditions_for_collection","()",""],["conditions_for_collection","Admin::UsersController","Admin/UsersController.html#method-i-conditions_for_collection","()",""],["confirm!","User","User.html#method-i-confirm-21","()",""],["confirmation_tooltip_for","TransfersHelper","TransfersHelper.html#method-i-confirmation_tooltip_for","(transfer)",""],["confirmed?","AccountOperation","AccountOperation.html#method-i-confirmed-3F","()",""],["create","Admin::AccountOperationsController","Admin/AccountOperationsController.html#method-i-create","()",""],["create","BankAccountsController","BankAccountsController.html#method-i-create","()",""],["create","CommentsController","CommentsController.html#method-i-create","()",""],["create","InvoicesController","InvoicesController.html#method-i-create","()",""],["create","RegistrationsController","RegistrationsController.html#method-i-create","()",""],["create","TicketsController","TicketsController.html#method-i-create","()",""],["create","TradeOrdersController","TradeOrdersController.html#method-i-create","()",""],["create","TransfersController","TransfersController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["create","YubikeysController","YubikeysController.html#method-i-create","()",""],["create_from_lr_post!","AccountOperation","AccountOperation.html#method-c-create_from_lr_post-21","(confirmation)",""],["create_from_lr_transaction_id","AccountOperation","AccountOperation.html#method-c-create_from_lr_transaction_id","(lr_tx_id)",""],["create_notification","TicketMailer","TicketMailer.html#method-i-create_notification","(ticket)",""],["creation_link","ApplicationHelper","ApplicationHelper.html#method-i-creation_link","(resource, label)",""],["credit_funds","Invoice","Invoice.html#method-i-credit_funds","()","<p>Credits the funds to the merchant account after payment\n"],["currency_as_options","TradeOrdersHelper","TradeOrdersHelper.html#method-i-currency_as_options","(c, options = {})",""],["currency_icon_for","ApplicationHelper","ApplicationHelper.html#method-i-currency_icon_for","(currency)",""],["dark_pool_icon_for","TradeOrdersHelper","TradeOrdersHelper.html#method-i-dark_pool_icon_for","(trade_order)",""],["dark_pool_message","TradeOrdersHelper","TradeOrdersHelper.html#method-i-dark_pool_message","(count)",""],["delete_link_for","TradeOrdersHelper","TradeOrdersHelper.html#method-i-delete_link_for","(trade_order)",""],["deposit","AccountsController","AccountsController.html#method-i-deposit","()",""],["destroy","BankAccountsController","BankAccountsController.html#method-i-destroy","()",""],["destroy","InvoicesController","InvoicesController.html#method-i-destroy","()",""],["destroy","TradeOrdersController","TradeOrdersController.html#method-i-destroy","()",""],["destroy","YubikeysController","YubikeysController.html#method-i-destroy","()",""],["display_menu?","ApplicationHelper","ApplicationHelper.html#method-i-display_menu-3F","(user, options)","<p>Checks whether the option should be displayed to the currently logged-in\nuser\n"],["do_notify","TicketMailer","TicketMailer.html#method-i-do_notify","(action, ticket)",""],["edit","UsersController","UsersController.html#method-i-edit","()",""],["email_confirmation","Invoice","Invoice.html#method-i-email_confirmation","()","<p>Sends a confirmation e-mail to the merchant upon successful payment\n"],["enforce_admin_rights","Admin::AdminController","Admin/AdminController.html#method-i-enforce_admin_rights","()",""],["enforce_management_rights","Admin::AdminController","Admin/AdminController.html#method-i-enforce_management_rights","()",""],["enforce_user_type","Admin::AdminController","Admin/AdminController.html#method-i-enforce_user_type","(klass)",""],["errors_for","ApplicationHelper","ApplicationHelper.html#method-i-errors_for","(model, options = {})",""],["exact_balance","AccountsHelper","AccountsHelper.html#method-i-exact_balance","(balance, code)",""],["execute","BitcoinTransfer","BitcoinTransfer.html#method-i-execute","()",""],["execute","LibertyReserveTransfer","LibertyReserveTransfer.html#method-i-execute","()",""],["execute","Trade","Trade.html#method-i-execute","()",""],["execute","WireTransfer","WireTransfer.html#method-i-execute","()",""],["execute!","TradeOrder","TradeOrder.html#method-i-execute-21","()",""],["fee_for","AccountOperation","AccountOperation.html#method-c-fee_for","(amnt)","<p>Calculates the fee for a Liberty Reserve transfer\n"],["fetch_bank_accounts","TransfersController","TransfersController.html#method-i-fetch_bank_accounts","()",""],["find_for_database_authentication","User","User.html#method-c-find_for_database_authentication","(warden_conditions)",""],["format_amount","TradeOrdersHelper","TradeOrdersHelper.html#method-i-format_amount","(amount, currency, precision = 4)",""],["from_params","Transfer","Transfer.html#method-c-from_params","(params)",""],["ga_provisioning_uri","Devise::Models::GaOtpAuthenticatable","Devise/Models/GaOtpAuthenticatable.html#method-i-ga_provisioning_uri","()",""],["generate_authentication_token","Invoice","Invoice.html#method-i-generate_authentication_token","()","<p>Generates an authentication token that allows bypassing regular\nauthentication for the InvoicesController#show …\n"],["generate_ga_otp_secret","Devise::Models::GaOtpAuthenticatable","Devise/Models/GaOtpAuthenticatable.html#method-i-generate_ga_otp_secret","()",""],["generate_name","User","User.html#method-i-generate_name","()",""],["generate_new_address","Account","Account.html#method-i-generate_new_address","()","<p>Generates a new receiving address if it hasn’t already been refreshed\nduring the last hour\n"],["generate_payment_address","Invoice","Invoice.html#method-i-generate_payment_address","()","<p>Generates a new bitcoin payment address\n"],["generate_reference","Invoice","Invoice.html#method-i-generate_reference","()","<p>Generates an invoice reference\n"],["get_account","Bitcoin::Util","Bitcoin/Util.html#method-c-get_account","(address)",""],["get_announcements","ApplicationController","ApplicationController.html#method-i-get_announcements","()",""],["get_balance","LibertyReserve::Client","LibertyReserve/Client.html#method-i-get_balance","(currency)",""],["get_orders","TradeOrder","TradeOrder.html#method-c-get_orders","(category, options = {})","<p>This is used by the order book\n"],["get_page","StaticPage","StaticPage.html#method-c-get_page","(name, locale)",""],["get_transaction","LibertyReserve::Client","LibertyReserve/Client.html#method-i-get_transaction","(transaction_id)",""],["history","LibertyReserve::Client","LibertyReserve/Client.html#method-i-history","(currency)","<p>Get history for last 7 days and last 20 transactions\n"],["iban","BankAccount","BankAccount.html#method-i-iban","()",""],["id_column","Admin::UsersHelper","Admin/UsersHelper.html#method-i-id_column","(record)",""],["inactivate_if_needed!","TradeOrder","TradeOrder.html#method-i-inactivate_if_needed-21","()",""],["inactive","TradeOrder","TradeOrder.html#method-c-inactive","()",""],["index","BankAccountsController","BankAccountsController.html#method-i-index","()",""],["index","InvoicesController","InvoicesController.html#method-i-index","()",""],["index","TicketsController","TicketsController.html#method-i-index","()",""],["index","TradeOrdersController","TradeOrdersController.html#method-i-index","()",""],["index","TradesController","TradesController.html#method-i-index","()",""],["index","TransfersController","TransfersController.html#method-i-index","()",""],["index","YubikeysController","YubikeysController.html#method-i-index","()",""],["invoice_delete","InvoicesHelper","InvoicesHelper.html#method-i-invoice_delete","(invoice)",""],["invoice_details","InvoicesHelper","InvoicesHelper.html#method-i-invoice_details","(invoice)",""],["invoice_payment_notification","UserMailer","UserMailer.html#method-i-invoice_payment_notification","(invoice)",""],["invoice_state","InvoicesHelper","InvoicesHelper.html#method-i-invoice_state","(state, options = {})",""],["jqchart_defaults","InformationsController","InformationsController.html#method-i-jqchart_defaults","()",""],["locale_switch_link","ApplicationHelper","ApplicationHelper.html#method-i-locale_switch_link","(locale, url)",""],["lock","Lockfile","Lockfile.html#method-c-lock","(base_name, &block)",""],["lr_create_from_sci","ThirdPartyCallbacksController","ThirdPartyCallbacksController.html#method-i-lr_create_from_sci","()","<p>Liberty Reserve callback\n"],["lr_transfer_fail","ThirdPartyCallbacksController","ThirdPartyCallbacksController.html#method-i-lr_transfer_fail","()",""],["lr_transfer_success","ThirdPartyCallbacksController","ThirdPartyCallbacksController.html#method-i-lr_transfer_success","()","<p>Liberty Reserve bounce URLs\n"],["matching_orders","TradeOrder","TradeOrder.html#method-i-matching_orders","()",""],["matching_orders","TradeOrder","TradeOrder.html#method-c-matching_orders","(order)",""],["max_withdraw_for","Account","Account.html#method-i-max_withdraw_for","(currency)",""],["menu_item","ApplicationHelper","ApplicationHelper.html#method-i-menu_item","(label, link, options = {}, &block)","<p>Displays a menu option if the logged-in user matches the optional criteria\n"],["method_missing","Bitcoin::Client","Bitcoin/Client.html#method-i-method_missing","(method, *args)",""],["minimal_amount_for","Transfer","Transfer.html#method-c-minimal_amount_for","(currency)",""],["move_xml_params","ApplicationController","ApplicationController.html#method-i-move_xml_params","()","<p>This method is used to work around the fact that there is only one allowed\nroot node in a well formed …\n"],["my_bitcoin_address?","Bitcoin::Util","Bitcoin/Util.html#method-c-my_bitcoin_address-3F","(address)",""],["name_column","Admin::UsersHelper","Admin/UsersHelper.html#method-i-name_column","(record)",""],["new","Bitcoin::Client","Bitcoin/Client.html#method-c-new","()",""],["new","Bitcoin::JsonWrapper","Bitcoin/JsonWrapper.html#method-c-new","(url, username, password)",""],["new","InvoicesController","InvoicesController.html#method-i-new","()",""],["new","TicketsController","TicketsController.html#method-i-new","()",""],["new","TradeOrdersController","TradeOrdersController.html#method-i-new","()",""],["new","TransfersController","TransfersController.html#method-i-new","()",""],["new","UsersController","UsersController.html#method-i-new","()",""],["notify_close!","Ticket","Ticket.html#method-i-notify_close-21","()",""],["notify_comment!","Comment","Comment.html#method-i-notify_comment-21","()",""],["notify_create!","Ticket","Ticket.html#method-i-notify_create-21","()",""],["notify_reopen!","Ticket","Ticket.html#method-i-notify_reopen-21","()",""],["number_to_bitcoins","ApplicationHelper","ApplicationHelper.html#method-i-number_to_bitcoins","(amount, options = {})",""],["number_to_lreur","ApplicationHelper","ApplicationHelper.html#method-i-number_to_lreur","(amount, options = {})",""],["number_to_lrusd","ApplicationHelper","ApplicationHelper.html#method-i-number_to_lrusd","(amount, options = {})",""],["payments_received","Invoice","Invoice.html#method-i-payments_received","(confirmations = Transfer::MIN_BTC_CONFIRMATIONS)","<p>Returns the total amount sent to the payment address with optional minimum\nconfirmations\n"],["pecunix_deposit_form","AccountsController","AccountsController.html#method-i-pecunix_deposit_form","()",""],["pending","Ticket","Ticket.html#method-c-pending","()",""],["plottable","Trade","Trade.html#method-c-plottable","(currency)",""],["post_to_callback","Invoice","Invoice.html#method-i-post_to_callback","()","<p>POSTs a request to the provided merchant callback, the requests includes a\nverification hash that should …\n"],["process_pending","Invoice","Invoice.html#method-c-process_pending","()","<p>Processes all pending invoices\n"],["process_tx","Admin::PendingTransfersController","Admin/PendingTransfersController.html#method-i-process_tx","()",""],["public_url","Invoice","Invoice.html#method-i-public_url","()","<p>Returns the URL under which this invoice is publicly accessible\n"],["px_cancel","ThirdPartyCallbacksController","ThirdPartyCallbacksController.html#method-i-px_cancel","()","<p>Pecunix cancel callback\n"],["px_payment","ThirdPartyCallbacksController","ThirdPartyCallbacksController.html#method-i-px_payment","()","<p>Pecunix success redirection URL\n"],["px_status","ThirdPartyCallbacksController","ThirdPartyCallbacksController.html#method-i-px_status","()","<p>Pecunix success callback\n"],["qr_code","User","User.html#method-i-qr_code","()",""],["qrcode_image_path","ApplicationHelper","ApplicationHelper.html#method-i-qrcode_image_path","(data)",""],["qrcode_image_tag","ApplicationHelper","ApplicationHelper.html#method-i-qrcode_image_tag","(data)",""],["random_id","LibertyReserve::Client","LibertyReserve/Client.html#method-i-random_id","()",""],["refresh_account_address","AccountOperation","AccountOperation.html#method-i-refresh_account_address","()",""],["refresh_orders","AccountOperation","AccountOperation.html#method-i-refresh_orders","()",""],["registration_confirmation","UserMailer","UserMailer.html#method-i-registration_confirmation","(user)",""],["reopen","TicketsController","TicketsController.html#method-i-reopen","()",""],["reopen_notification","TicketMailer","TicketMailer.html#method-i-reopen_notification","(ticket)",""],["reported_balance","Admin::InformationsController","Admin/InformationsController.html#method-i-reported_balance","(currency)",""],["request","Bitcoin::JsonWrapper","Bitcoin/JsonWrapper.html#method-i-request","(params)",""],["required_confirmations","AccountOperation","AccountOperation.html#method-i-required_confirmations","()","<p>Extra confirmations this account operation requires to be considered\nconfirmed\n"],["reset_ga_otp_secret","UsersController","UsersController.html#method-i-reset_ga_otp_secret","()",""],["round_amount","Transfer","Transfer.html#method-c-round_amount","(amount, currency)",""],["round_amount","Transfer","Transfer.html#method-i-round_amount","()",""],["selling?","TradeOrder","TradeOrder.html#method-i-selling-3F","()",""],["set_key_id","Yubikey","Yubikey.html#method-i-set_key_id","()",""],["set_label","Admin::AccountOperationsController","Admin/AccountOperationsController.html#method-i-set_label","()",""],["set_locale","ApplicationController","ApplicationController.html#method-i-set_locale","()","<p>Sets the locale according to the first subdomain or redirects to a\nlocalized version of the requested …\n"],["set_time_zone","ApplicationController","ApplicationController.html#method-i-set_time_zone","()",""],["show","AccountsController","AccountsController.html#method-i-show","()",""],["show","InvoicesController","InvoicesController.html#method-i-show","()",""],["show","QrcodesController","QrcodesController.html#method-i-show","()",""],["show","StaticPagesController","StaticPagesController.html#method-i-show","()",""],["show","TicketsController","TicketsController.html#method-i-show","()",""],["show","TransfersController","TransfersController.html#method-i-show","()",""],["sign_for_balance","AccountsHelper","AccountsHelper.html#method-i-sign_for_balance","(balance)",""],["storage_account_for","Account","Account.html#method-c-storage_account_for","(currency)",""],["sub_matching_orders","LimitOrder","LimitOrder.html#method-i-sub_matching_orders","(predicate)",""],["sub_matching_orders","MarketOrder","MarketOrder.html#method-i-sub_matching_orders","(predicate)",""],["support","InformationsController","InformationsController.html#method-i-support","()",""],["synchronize_transactions!","AccountOperation","AccountOperation.html#method-c-synchronize_transactions-21","()",""],["ticker","TradesController","TradesController.html#method-i-ticker","()",""],["title_column","Admin::TicketsHelper","Admin/TicketsHelper.html#method-i-title_column","(record)",""],["to_label","AccountOperation","AccountOperation.html#method-i-to_label","()",""],["to_label","BankAccount","BankAccount.html#method-i-to_label","()",""],["to_label","Yubikey","Yubikey.html#method-i-to_label","()",""],["tooltip_for_state","InvoicesHelper","InvoicesHelper.html#method-i-tooltip_for_state","(state)",""],["trade_notification","UserMailer","UserMailer.html#method-i-trade_notification","(user, sales, purchases)",""],["transfer","LibertyReserve::Client","LibertyReserve/Client.html#method-i-transfer","(account, amount, currency)",""],["transfer_details","TransfersHelper","TransfersHelper.html#method-i-transfer_details","(transfer)",""],["transfer_state","TransfersHelper","TransfersHelper.html#method-i-transfer_state","(state, options = {})",""],["type_column","Admin::PendingTransfersHelper","Admin/PendingTransfersHelper.html#method-i-type_column","(record)",""],["type_for_trade","TradesHelper","TradesHelper.html#method-i-type_for_trade","(trade)",""],["type_name","Transfer","Transfer.html#method-i-type_name","()",""],["unread","AccountOperation","AccountOperation.html#method-i-unread","()","<p>Should the transaction be highlighted in some way ?\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["update_password","UsersController","UsersController.html#method-i-update_password","()",""],["user_column","Admin::AccountOperationsHelper","Admin/AccountOperationsHelper.html#method-i-user_column","(record)",""],["user_has_balance?","TradeOrder","TradeOrder.html#method-i-user_has_balance-3F","()",""],["valid_bitcoin_address?","Bitcoin::Util","Bitcoin/Util.html#method-c-valid_bitcoin_address-3F","(address)",""],["valid_confirmation?","AccountOperation","AccountOperation.html#method-c-valid_confirmation-3F","(confirmation)",""],["valid_ga_otp?","Devise::Models::GaOtpAuthenticatable","Devise/Models/GaOtpAuthenticatable.html#method-i-valid_ga_otp-3F","(ga_otp)",""],["valid_otp?","Yubikey","Yubikey.html#method-i-valid_otp-3F","(yk_otp)",""],["valid_yk_otp?","Devise::Models::YkOtpAuthenticatable","Devise/Models/YkOtpAuthenticatable.html#method-i-valid_yk_otp-3F","(yk_otp)",""],["validate_each","BitcoinAddressValidator","BitcoinAddressValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","BlankValidator","BlankValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","IbanValidator","IbanValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","MaximalAmountValidator","MaximalAmountValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","MinimalAmountValidator","MinimalAmountValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","MinimalOrderAmountValidator","MinimalOrderAmountValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","MinimalOrderPpcValidator","MinimalOrderPpcValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","NegativeValidator","NegativeValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","NotMineValidator","NotMineValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","UrlValidator","UrlValidator.html#method-i-validate_each","(record, field, value)",""],["validate_each","UserBalanceValidator","UserBalanceValidator.html#method-i-validate_each","(record, field, value)",""],["verification_hash","Invoice","Invoice.html#method-i-verification_hash","()","<p>Generates a verification hash based on the invoice data TODO : Include an \nAPI key, as it stands, the …\n"],["verify_otp","Yubico::Client","Yubico/Client.html#method-i-verify_otp","(otp)",""],["visible","TradeOrder","TradeOrder.html#method-c-visible","(user)",""],["wallet_backup","BackupMailer","BackupMailer.html#method-i-wallet_backup","(recipient, wallet)",""],["welcome","InformationsController","InformationsController.html#method-i-welcome","()",""],["with_category","TradeOrder","TradeOrder.html#method-c-with_category","(category)",""],["with_currency","Trade","Trade.html#method-c-with_currency","(currency)","<p>TODO : Dry up (duplicated in TradeOrder)\n"],["with_currency","TradeOrder","TradeOrder.html#method-c-with_currency","(currency)",""],["with_locale","StaticPage","StaticPage.html#method-c-with_locale","(locale)",""],["with_name","StaticPage","StaticPage.html#method-c-with_name","(name)",""],["withdrawal_processed_notification","UserMailer","UserMailer.html#method-i-withdrawal_processed_notification","(withdrawal)",""],["yubikey_delete","YubikeysHelper","YubikeysHelper.html#method-i-yubikey_delete","(yubikey)",""],["yubikey_details","YubikeysHelper","YubikeysHelper.html#method-i-yubikey_details","(yubikey)",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}